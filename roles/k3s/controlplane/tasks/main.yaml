---

### First Controlplane Node
- name: Setup First Controlplane Node
  block:

  - name: Download k3s binary x64
    register: k3s_downloaded
    get_url:
      url: https://github.com/k3s-io/k3s/releases/download/{{ kubernetes.version }}/k3s
      checksum: sha256:https://github.com/k3s-io/k3s/releases/download/{{ kubernetes.version }}/sha256sum-amd64.txt
      dest: /usr/local/bin/k3s
      owner: root
      group: root
      mode: 0755
    when:
    - ansible_facts.architecture == "x86_64"

  - name: Copy K3s service file
    register: k3s_service
    template:
      src: "k3s.service.j2"
      dest: "{{ systemd_dir }}/k3s.service"
      owner: root
      group: root
      mode: 0644

  - name: Create k3s directory
    file:
      path: /etc/rancher/k3s
      state: directory

  - name: Copy K3s config file
    register: k3s_config
    template:
      src: "k3s-config.yaml.j2"
      dest: "/etc/rancher/k3s/config.yaml"
      owner: root
      group: root
      mode: 0644

  - name: Restart k3s service
    systemd:
      name: k3s
      daemon_reload: yes
      state: restarted
      enabled: yes
    when: 
    - k3s_service is changed or k3s_config is changed or k3s_downloaded is changed

  - name: Wait for pods to start
    wait_for:
      timeout: 10
    when: 
    - k3s_service is changed or k3s_config is changed or k3s_downloaded is changed

  - name: Install Cilium
    template:
      src: "cilium.yaml.j2"
      dest: "/var/lib/rancher/k3s/server/manifests/cilium.yaml"
      owner: root
      group: root
      mode: 0644
    when: cilium.enabled is true

  - import_tasks: coredns-ha.yaml
    vars:
      total_controlplanes: "{{ groups['controlplanes'] | length }}"
    when: 
    - total_controlplanes | int > 2
    - k3s_service is changed

  - import_tasks: kube-vip.yaml
    when: kubevip.enabled is true

  - import_tasks: metallb.yaml
    when: metallb.enabled is true

  - import_tasks: longhorn.yaml
    when: longhorn.enabled is true  

  - name: Delete Cilium YAML
    file:
      path: /var/lib/rancher/k3s/server/manifests/cilium.yaml
      state: absent

  when: 
  - ansible_host == groups['controlplanes'][0] and dangerzone.cluster_init is true

### Additional Controlplane Nodes
- name: Setup Additional Controlplane Node
  block:

  - name: Download k3s binary x64
    register: k3s_downloaded
    copy:
      src: "{{ kubernetes.version }}/k3s"
      checksum: "94df78893cf486bafe078ba076b903026fec8aad"
      dest: /usr/local/bin/k3s
      owner: root
      group: root
      mode: 0755
    when:
    - ansible_facts.architecture == "x86_64"

  - name: Copy K3s service file
    register: k3s_service
    template:
      src: "k3s.service.j2"
      dest: "{{ systemd_dir }}/k3s.service"
      owner: root
      group: root

  - name: Create k3s directory
    file:
      path: /etc/rancher/k3s
      state: directory

  - name: Copy K3s config file
    register: k3s_config
    template:
      src: "k3s-config.yaml.j2"
      dest: "/etc/rancher/k3s/config.yaml"
      owner: root
      group: root
      mode: 0644

  - name: Restart k3s service
    systemd:
      name: k3s
      daemon_reload: yes
      state: restarted
      enabled: yes
    when: 
    - k3s_service is changed or k3s_config is changed or k3s_downloaded is changed

  - name: Wait for pods to start
    wait_for:
      timeout: 10
    when: 
    - k3s_service is changed or k3s_config is changed or k3s_downloaded is changed
    
  when: ansible_host != groups['controlplanes'][0] or dangerzone.cluster_init == false

- name: Download Kubernetes Signing Key
  register: k8s_gpg
  get_url:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    dest: /usr/share/keyrings/kubernetes-archive-keyring.gpg
  when: 
  - ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Add Kubernetes repository
  register: k8s_repo
  apt_repository:
    repo: deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main
    state: present
    filename: kubernetes
  when: 
  - ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu' 
  - k8s_gpg is succeeded

- name: Install kubectl
  register: kubectl_installed
  apt:
    name: kubectl
    update_cache: yes
    state: present
    install_recommends: no
  when: 
  - ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu' 
  - k8s_repo is succeeded

- name: Configure kubectl cluster to https://{{ kubernetes.apiserver_endpoint }}:6443
  command: >-
    k3s kubectl config set-cluster default
      --server=https://{{ kubernetes.apiserver_endpoint }}:6443
      --kubeconfig /etc/rancher/k3s/k3s.yaml
  changed_when: true

- name: Create directory .kube
  file:
    path: ~{{ ansible_user }}/.kube
    state: directory
    owner: "{{ ansible_user }}"
    mode: "u=rwx,g=rx,o="

- name: Copy config file to user home directory
  copy:
    src: /etc/rancher/k3s/k3s.yaml
    dest: ~{{ ansible_user }}/.kube/config
    remote_src: yes
    owner: "{{ ansible_user }}"
    mode: "u=rw,g=,o="

- name: Auto-completion kubectl
  shell: |
    kubectl completion bash > /etc/bash_completion.d/kubectl